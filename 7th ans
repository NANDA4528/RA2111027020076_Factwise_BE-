7. There are several cards arranged in a row, and each card has an associated number of points. The points are given in the integer array cardPoints.
 
In one step, you can take one card from the beginning or from the end of the row. You have to take exactly k cards.
 
Your score is the sum of the points of the cards you have taken.
 
Given the integer array cardPoints and the integer k, return the maximum score you can obtain.
 
Example 1:
Input: cardPoints = [1,2,3,4,5,6,1], k = 3
Output: 12
 
Example 2:
Input: cardPoints = [2,2,2], k = 2
Output: 4
 
Example 3:
Input: cardPoints = [9,7,7,9,7,7,9], k = 7
Output: 55

Solution:

step1:Calculate the total sum of the entire cardPoints array.
step2:if lenght of the array == k,then take the total sum itself.
step3:Find the smallest subarray sum of length len(cardPoints) - k.
step4:This will be the subarray that we do not take any cards from.
step5:total sum - smallest subarray sum = maximum score.

#Code:

def maxScore(cardPoints, k):
    n = len(cardPoints)
    total_sum = sum(cardPoints)
    if k == n:
        return total_sum

    subarray_length = n - k
    min_subarray_sum = sum(cardPoints[:subarray_length])
    current_subarray_sum = min_subarray_sum

    for i in range(subarray_length, n):
        current_subarray_sum += cardPoints[i] - cardPoints[i - subarray_length]
        min_subarray_sum = min(min_subarray_sum, current_subarray_sum)
        
    return total_sum - min_subarray_sum

Output:
Example 1:
print(maxScore([1,2,3,4,5,6,1], 3)
#output:12

